#!/usr/bin/env perl

use strict;
use warnings;
use JSON;
my $json = JSON->new->allow_nonref;

my $DB = "$ENV{HOME}/.local/share/ta/alerts.db";
my $prefix = qq{
.mode col
.header on
};

my $generic_query = q{select market, timeframe, candle_at, datetime(candle_at/1000, 'unixepoch') as ts, message from sent where market = "%s", timeframe in ("4h", "12h", "1d") and message like "%%%s%%" order by candle_at desc limit 10;};

my %REPORTS;
$REPORTS{gold} = $json->encode(qq{
$prefix
.width 10 -4 -12 -16 32
select market, timeframe, candle_at, datetime(candle_at/1000, 'unixepoch') as ts, message from sent where timeframe in ("4h", "12h", "1d") and message like "%gold%" order by candle_at desc limit 20;
});

$REPORTS{'gold.BTC/USDT'} = $json->encode(qq{
$prefix
.width 10 -4 -12 -16 32
@({[ sprintf $generic_query, 'BTC/USDT', 'gold' ]})
});

$REPORTS{death} = $json->encode(qq{
$prefix
.width 10 -4 -12 -16 32
select market, timeframe, candle_at, datetime(candle_at/1000, 'unixepoch') as ts, message from sent where timeframe in ("4h", "12h", "1d") and message like "%death%" order by candle_at desc limit 20;
});

$REPORTS{'death.BTC/USDT'} = $json->encode(qq{
$prefix
.width 10 -4 -12 -16 32
@({[ sprintf $generic_query, 'BTC/USDT', 'death' ]})
});

my $query = shift;
if ($query) {
  my $report = $REPORTS{$query};
  if ($report) {
    system("echo $report | sqlite3 $DB")
  } else {
    warn "Report '$report' not available.\n";
  }
} else {
  warn "Usage: aq <QUERY_NAME>\n"
}
